/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     turbScalarTransportSimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         5000;

deltaT          1;

writeControl    adjustableRunTime;

writeInterval   500;

purgeWrite      0;

writeFormat     binary;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

// adjustTimeStep  yes;

// maxCo           1;


    functions
{
    tTransport
    {
      type            scalarTransport;
      libs            ("solverFunctionObjects");
      resetOnStartUp  no;
      field          T;
      schemesField    U;

      fvOptions
      {
        tSource1
        {
         type        scalarCodedSource;
         name        sourceTime;

         scalarCodedSourceCoeffs
         {
           selectionMode   cellSet;
            cellSet        selectedCells;
           volumeMode      specific;
           fields          (T);
           name            sourceName;
           codeInclude
           #{
             #include "fvCFD.H"
             #include "fvc.H"
           #};
           codeCorrect
           #{
           #};
           codeAddSup
           #{
             const scalarField& V = mesh_.V();
             //const vectorField& C = mesh_.C();
             const volVectorField& U = mesh().lookupObject<volVectorField>("U");
             //const volScalarField& Ux = U.component(0);
             //const volScalarField& Uy = U.component(1);
             //const volScalarField& Uz = U.component(2);
             
             scalarField& source = eqn.source();
             source = 0.024*Foam::mag(U)*V;

            
           #};
           codeConstrain
           #{
             Pout<< "**codeConstrain**"<< endl;
           #};
         }
       }


        tSource2
        {
         type        scalarFixedValueConstraint;
         enabled     true;

         scalarFixedValueConstraintCoeffs
         {
           selectionMode   cellSet;
            cellSet        selectedCells;
           volumeMode      specific;

           fieldValues
           {
             T             1;
           }
         }
       }


      }


    }

}


// ************************************************************************* //
